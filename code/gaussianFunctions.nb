(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     29166,        637]
NotebookOptionsPosition[     28259,        600]
NotebookOutlinePosition[     28586,        615]
CellTagsIndexPosition[     28543,        612]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"a", "*", 
   SuperscriptBox["E", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "b"}], ")"}], "2"], 
      RowBox[{"2", "*", 
       SuperscriptBox["c", "2"]}]]}]]}]}]], "Input",
 CellChangeTimes->{{3.682691974239216*^9, 3.682692028918501*^9}, {
  3.682692967042282*^9, 3.682692973561817*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.682692031697516*^9, 3.6826921836806393`*^9}, {
  3.6826929660154133`*^9, 3.682692971058414*^9}, {3.682694827185461*^9, 
  3.682694830229022*^9}, {3.682713035612131*^9, 3.6827130366432056`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw1mnk41U/0xyVUQqGs2ff9Lkmke0aKlCSKJCVri5QlS5ZvUbJlX1rslKWU
SoXiTgmF7LLvsnORff3d3/P8fv985nk9M2fOmff5zJz5Y8SsbhnZMjIwMNTR
P//b+gyfmt3cJGOu6XgT2pFaypAXz3zHGhl7KuSwRJbUUgx29yx+XibjrStn
BrYK11FE1W+v3/pHxo0pj4J1k+oo34OjtvcOkbG8t520VU49ZbtyizD+TcbP
zlJu7phrpDh9TxZLqCRjXj+jLPkjTZR2k6uSHhVk3CHKJ+EU2UR59d+yHOEb
GUuWVOv5kpspBvWCqin5ZFzL8Tx0V8AfSoyr5cl7z8n4vdMbM9rVNsr6djmD
i0/IOEj53OCtqjaKXeKM4cFYMp6JJklcUmmnqJX7mUyHkbH99RmGJ6vtlHbe
F1cs/chYajG7lutlJ0X0y6g7ukbG1yL/+zEv0UsJOv3+7j47+no9ROv/Xuml
zA7c9VmyoserMXmyMKWXUsrG5p93kYwtr3Vs8Ij1UewuKYeJGpLx0I93mEWp
n/Jqi0sGgxoZ96rdkH3pOkg5aJzD8pRMxmvLHHenfg5SyjP6rhIJZEyJu/3d
T/gvpVfXUMlKjh6fYvnbtN9/KTxhSp9KBcl4IE9ot77mMCWjx4bvIh8ZXwlO
/vTf82EKkZhwd24P3f6ZBLvs2jBFv4kVpDjIOGUv572JbyMUP4GRigAGMvbT
fvOy9/IYZbeDiLzIOglvkwy+c65qjJJYbBL6eZmE73GCmcPBcUqBZZnhyCwJ
H7a5Ff6Ed4Iy+TKtTe8vCR8LepH9ZGyScp5sMc5WScLCtRGF7nPTlKEHMade
lJNwxJNB0o+DMxSXP1VvD5eS8B3N+yK8vjOUME8NV8evJLwlm6Dfs3OWUkrl
Xa99Q8I5z0uf2Oz/RzHkPH356isStkysWzl9/x+l2yrgG0MWCYeTb/Neqf1H
WWKef0hMJeHa5h5J5ltzFGX9Bo7oaBJ+utSqUP11nvI1cYeTQgQJM5xaSbzI
vUDRo6HG0lAS9gpxD1a9sUCxiXobP/eQhO1Frp9qFF6kPGsNFTXxoNsHKx7V
jluiMNvqkvgtSLjibVmqYeUqpeES0XTcjIRbZwtErxLWKEnnBb2LTUi4fLtX
wmD8GuWAPq3siiEJe1PFmERurFPsyPFmOdokvKCmziYssUn5uWX43iF5Eh78
++NXteMWiFmte8EuQ8LVbHMtkm+2gOV8UWWPBAmHTR8pNp3aAssjYXseCJFw
1JCfupkTI8jXHciq3k3CSeGi7IJ+WyE0KaDWYpGIdSL56tTqmeH8k9tzKnNE
7LNmkpskwgKSURf4GWeIWOt30z7OWyxQ/FDZ+uUYER9V/6EgzbkNphz+LEx1
EXFSJEOUk9V2MDwkLXzvBxFnrrvuz9fcCftUd2sbfSNiUkP6kk/iThhRXrGX
LCHi1tXZ9cebO+G+eM27n5+J2C5xcyOigg3e73A7xvmKiEPq2Hrj7DmAu7XM
IS2SiLsiM3w+zu8GrJAa+CCMiK9tT9kiQuAEh/+8M+xCiJgp55qo7g1OKJcm
d8o/JGKjkGzjzgFOuHsn5eQHDyIevghbL3ZzQT+Xl/yPy/T5TcfVGlb2QLid
ic7Li0RcfMY95diRvaBZRLQKNKPrYT1+Mjl4L8RdGXmqb0zEn5bmT+8W5oET
eed2NOsQsSP5+eIBQ154f4ow8leJiLHn002RQX64nLqT6ac8Ed8R+y/S4JAA
sM0PieTIEHHUv4mIqGgBsEtINHUUI+KgjvcV9rqCIDDOWrGwh4gXtNuj07/u
A7/Avy+2rRHwGVfdWqteEVDpxN9Glwh4IyU+HqREoVMloatqnoDPFm/cmbsg
CgdajPZG0AjYdzx4yOynKIxJ4Qd8AwQ8t5fp7IlXYmBU+sxarpKAmey8WwOj
JUCyabC7opyA28wjXZzaJGBhUPmCXSkBa6kxnT0mKglPWUoN078SsKPnW5ei
PEno1Rs/LPSWgOU+PRxR7JKCm3WH+DhjCPhgzueyQTtZoPQ9jH4bQcC3tMKl
p77Kwu7ZWg6DxwTsYC60sGePHORz2zCHBBCwmmXNq59lcrBiEjrL5EnAJuEx
QgpqChDY1Vm9ZEHAX/YXBHGdU4YLU9LH4y8QcLal+tEXJcqguHm7VNWUgFmy
dVQi5VSgVpS5yNmQgLPqPHy/byEAj41S5sQRAm4/8rBbdpAA6WM+93tlCHjt
pDwlq5oErqsVa76SBLxi9ULqMDsZdNi4PITECLhl302hNAMyjCm9dLwgQMDK
We1zfxvJQHCqMW9iI2CD59c/PhvZD160ww4RAyrYnJZjtqKpBglX1EZQlwr+
oNjL4RGgBl8bCTYzf1Rwie3wxdo6Ndj4LHHRqFIFHzXQ5t5z9SD43duhv+ed
Ct4tcND8YKo6BHM2KzzxVcEJ3C/NuJEmvPKvyTzuoYK/ntSQNXiiCdXzFRLL
Tir4+m92v+AZTeBoLxK8YKuCYxyHc7kyD0NUWsrOffoqeIrYRH4jDPCM7DCe
zK+CRUmT2npiWvDlha29IbcK9tQ1fLTPRAs6eS8PMLCr4EzFtPJHIVogvHam
4woD3Z/PfT/FJS1I+6FWJTGsjMc8KN87Wo9A9rmtrzLzlbGdynTg0cKjUFmx
Jn3+jTKW8y9hubh0FMbUF9K2Zynj0yeu2kgfPAaKwqPPrj1XxvorMUwdhccg
b6gmWMFPGe+WzcheLNOBAvdn19+epo+3KNJ6xagH4jZOL1qPK2PRd6f3yZ7V
g8eGx3u3HFHGhPryz89f6oGV3MK5s/uV8TQj7nEyOAE7O85oLfMp47q5OFnp
nJNwibKDT7tfCVvR7C2lYwzgp3yvkUOHEj7wyTfeYsEASLyfH8c2KeHU3p8X
Cs1Ow7Zpm60j5Uo4LXnNfZ7TEPJS8VToKyXcnvrtpu6AIWxl9ij746qEjd8m
enSkG4HjjAEDg6MS9tL8+KCr2whau6QOydkrYW/m4/ahAsbw+lNjnpeZEqam
PepZjDYGk6sqCaIUJZw4WNd0MPwsZFUNOV/fpoRzmx7lsGabAFdBcW40gxI2
ObMvuIhmAj4ZMSNflxXxGcmFWVU1UzDyOXJp14QiDvmzkR3/0xRWlZP08usU
8ePTep+15s+DQdQ50Y2niviG0bQ1n4c53CXt0tONVsQCG0YCi5Xm8LLhp1NE
qCJe/2a79avwRdjg0iwV/08RR+yccdzy6yLkRovb6dooYjnzN2VFspeALZb2
KkJZEcdmftHzDrGEg6rZTW0yijiSrfRm9ldLsGm2WhcXU8TyfTdrL05Zwte9
fww+civiL3GEW+bGV+BG3NeZtiUFHPuFKa9Twgoq44PUJEoVsOVGYNG+XmtY
UNO2dPiqgG+bHX98SsAGxFvXAj9+VMDbvnI7CJyzgbt8t9t1sxSwoeFRqbBq
G5B7auLj8FgBz0tl7t5WaguBzyRKP5oq4APsh3bF1tqDbmKxwfEJeTwaLfCf
h7MDTD/uXGMaksdSQstBZcUO8Mx3NedbjzyOyVwX/LnjJkxcVt92qFEen1pr
7PuXfhOixD9SlYrk8Uk3y77dfY7QnfmawB0oj11mjf16qbch8ElVd+19eUxO
1fkVMX4biEFjoaFe8rhEfjw4i9cJHlyXHWW+JY/NBbm7OJ2cQF4pI3XpnDwW
v3XkxYCsM7i9f87VLSGP1++O/9HNdQHR9CL8TEge57s5jbX0uMCv6DZHU155
bFysntTF5Qr77vBW1bHKY16z2IxTd13hu1q0f+mMHJb4dfhju8Ed4CgOnsui
ymHWaIczfrvc4WWF5x8Xcznc9D5AXmbhLjwluWlnn5XDBIUB053gBaGJznnd
p+Sweu9scUqgFzi73AjWQ3LYYjae5a+QNxwWsaCISMnhtjqRhjVDH2hyQy8r
p2TxL8WiuC/t/0FFnyY3w4gs3vL1/P0PvPegSF/9nmqfLH4d787ieOQepIiT
LqQ0yuI0rtuf9jy9BzdqJDjcCmSxz9M+Xzh5Hxilt7mJ+cni75993ctK/WA+
YuuAiZcs5kzNulI15wcjq5unQ11lsZbdz0htaX+oqV+SW7STxSFiLqfDgv3h
qc9YV/VJejx5NPOX5x8Aofn3MY+9sphmIraZuzMALj2I2VubJYNLNPgpvxuD
oAYWtnmkyWA7S6iP2R0MsGq6Ipogg53s3YfbTwWDqLNgj3O4DEYswRxDv4Kh
/3JaFo+bDP4SnJW4+2cI2B3KO3RJm97f5bvFp+sx/FngVN52WAbHfNI3iBMP
A933LqJ5B2Rw6ZOMK5pXw0BWTo2ZUV4G/3ZeiCLNh8EYT0nNi90yuMnR4O00
awQ4zlZdmeySxmdaxrjD1SOhO1fpbFyLNL4HyZVFlpFw+lq4DtRLY5Ei/aj9
gZFA6DVSiPwhjZeVKcZ7WiNh9nfb3P5X0ni9fykvyisK3LKHH3l7SOM2F79z
6/XR4Gu59c1Obmnca1vcrIHjIK9WN6yJTRq/beHcUJqJg35KqGMiizTWi+C8
7y0eDzpCe1VUVqQw6WlDoVJAPL1+SOcZ9UlhuxY55ukzTyDJ+MT7p2+l8CXX
S3scV58CVSfyk4y+FOZ+rDas/iwRZj82x00fk8KO39utcloSQVJKwL0QpDCP
4k6NwL1JELg1Xe0kWQo7HLp+ISwqCQxxfoGjgBTOZ3XgbY5Mhl711qKPI5J4
6te9ytGGFGBQEqFqP5TEydSTRTPc6eDNo3Xpoa8kDjojP2p6OB0WN63Wy90l
sa1OpiSrfTpMNbw8dOK6JGYgLtqd/ZIOHR7KBYanJfH0scO5IfYZ8OnH4XcW
/JJY6o5Ebn/NC7h58WK6e64Ejt8unCLXmQUjx3yPFL6UwG/868b6dmWDjUpK
30qyBJa4SO74p50NFxgHRXyjJLCqBdNN6dxsOJ51I+GBuwTWtRVPbPDPAcm5
u7GRWhJ4+cTXoewjr6E95OmjV83imPnTtZnPTHnQWCb62rJWHPfGq+/3EM+D
6s3Mur2/xPHb73U5tigPSlw+8d/7Ko5fK+6a+umdB2nmja/Opotj/48aIx8X
8+C6Anvd+m1xPECTeGS08A5WK+/xGbKJ45BT3MWdvPkwx7T9MDOLON7Pf6cu
8VA+TFHCrxRtiuEF1uMjkZfzofd9Yo7kPzF8Fx/t4s7Khx/PijSX28SwtUR8
n/+hjxB6fc4yLVMMq64d09V0+AT7WK9mzx0Rw15+ZTInFgrgUkl1qLimGN7Q
1JczlSyEVGfibUNVMfwhVfnzS6NCkO5YOfBaRgyrDw0Yc+QVgsrrxz+s2cTw
MhN/MLNjERwx+NDT0CyKuaRCOUsXvsC1qI29766K4jgb3oARTSq81rFe7r4i
iqfe+xTlulBhaqWik81cFDtkfZ75kkMFZ+vI9KunRLH+NhnudjYM3vsliaIk
UQz9YB3qg0E4N/qJ8KII1vYMsJ20/QY3VOWZO/aJYI0ZlgdqxqXgzFyY6bZL
BDfM6tuWOJfC3WbdE1yMIrhqlbx5PaoUgu/YhusNC+Nz/OdTVBtKIedjCn/B
O2Esuu+JTZTxDxhV5VWO1RHG7mzFme4WZWB/gMn09G0h/Gnf9gGjsAqwVuvO
Ki0VxGrio9RAu2qwy1Iz0fksiOuWBsK4HlfDdf7Irb9yBPGtH6KK1A/VcHtV
+1JNpCCmTOfV3dvyG7yp2dxtlwXxG8Mzb18k/YYY3Tu+U6sCePvnK+dce2qg
3JTtLP9+ARzoz8wSUFwH8h4am44ZfLituWXpYGgj4C4D+YE4PnxCVa+O+qIR
TLStz5kG8WGdc6+bzaiN4McR+goc+XAuuVWjYrYR2jK6THcf5MPT8gY8ARea
ILD+Xt67Kl5ccEI6KlCpGYbkK67MzfLg25yyhQf7/kBql/EPT629mMc+tV3b
qx2G7+/V1OXjwqsOBvrUvl4oipU9NmLCjr1HqrY1M/0FwmjbnEoiCw4fjD/V
ODkCrtNKcrwPWLCQxfD9lNURKFi8b7FxnQVLLsz8s90xClos8uXVB1nwaQ89
zTbJUTCSuBt/rYkZO0qJsV02H4U7FgIa6TuZ8YHSYKnm8lEoqr/wH8/drfiH
T79ya9wYbLS++bBuuRUfTPfXe5A+Bkd6GUcGdbfinK6OrdJ5Y1A1lWP4Ye9W
/HuumfnErzHo3LkqZviOERdG8jBxrY7B5rHnP4JGtmCPSX/ViIvjcLSoY8e6
CQP2td92sIhnAt7kvFCvOMSAr2YaNg2KTwDf81vXIkUZsCfP4FkGlQn4s8gS
dbJpkxpwYThth+4ESHmZ7E5c2aAOV5xvsXKbgO/359mQ7jp1TMCeT7BhAtbC
yCwBvcvUwuqva1t9JqHuVoWtQM4ytWXpk4fwo0lINzQve+OyTN3Sv4NVJnIS
TnD5P2hhWabOpTkIML6YhKexDYxySktUNS2hwq6qSTiQ4LRZ5blA7Z+YiOLn
mYLb2W+XOLn/UbnyaVtFE6aAwOHof6R3lrriJG15Ln0KZpwVOVxyZ6mE3p8C
njlT4KyZLdGkO0udrFh1CymYgju1aQZx3jPUlRNu1u2NU/BvTEFPtZpGPRT9
UJVnGw1c87MuxdnRqJSbIXEK7DRY8JFyXWSgUbP2lUUpc9NgabdIcqHqFNVO
1JqwLkyDtQNc84eTJ6h80jZ1X1RpwOK/lKLjPEo9c9438uNlGjzSv/Mpk22U
Kmmt9jHZhgbbeWartmeOUBPu+dS7XaMBa/b4QmXHMNXfNLd23JkGu2q79U8f
G6KmCgtP0R7QIOKJuVVez1/qeYn6XhREAy6rVnfOu3+pQeGxj3wf02DPfH1a
45tBKrPWu3pqLA34BMuWTPkGqJeTo/3MXtDg6aAWR+H7fmrCUQ3YlU0DgTcl
EgKn+qm3vp52ffeaBkJaBQad9/uow+9SFL98oIF2jYnetz891NNrxSIDmAY6
Vwxd/Xf2UOUEv4+sltLg+Jxe8jHUTVUWfbbIUEEDfYHD87+yO6lWUSp1tdU0
MLGTSG3wbqMeivv7578WGgQ7uQRGfWylnnY//2+yjQbF3qW3jKZaqF5zJ2eP
d9JAMtqa0nD5D3WNoSygrJcG55M+SEU9aabeGZTdM9xPg5DsrexG9U3UHslK
l/lBGsxS0zvqjzRS2YvWn7WO0EC66t/3SK8G6riav3nuGA3M/mjnnMmvp1Lu
KvY6TtAATwx41EvVUccbDeQKaDQYodlj8eIaqg6lfhhmaHCaZXt4mvJvqqhU
8KX8WRoIk48rpnFWUnd2Eq9bz9Pgod7Iipj/T2qMntZK4gKNfp8O/JU6V049
7vPzYNkiDYzdZJ+I2ZVRp/XeSrQt0aAo9KddaksptSycobBtmQZi6VdVxfS+
Uy8dGVsoX6FBYOF2ptQiTD3gWNyRskqD7uQzL7TOl1Cph6ds7ddokFsdeUTr
0Bfq3g3uGIF1Gngt1/cg4QLqEYlRmyI660lz+aAtH6lc+idbdDZowGtsJIAG
31FDjx0ao9K5alPy1n9huVQae1eC1CYNrpq9yPY9m0k1aHGfcqcz0wepQR+B
VGrpDrfuT3RG/PqHV3AslXDM1qGfztNPntrMPPWjJlotxK/Q2Zsxpkzn4DWQ
uLNuuUln5WfWFXsOhINbpVPFNJ27+d9N7dyVAOtjN6tq6GxMbv0aoJUBfk9V
bj6l86c2U79HXjng3sCba0hndjwu8eNCHtRU5oTM0eOF6FcBP9w/wM2p8B0P
6exkd2P0R8wnIHZHyjDSOU1dQb/sXSE8vJk0dIO+/ia28TdlNV/hSXK57ne6
Xiy9OZzl41QQyqDoM9M5wUxVw/rBN8hstJjfT9dXVTv2xgBXKTx/lXT0DF3/
GsX5BOvUH/D5V9KhC/T8MDB83LQuqQDUyChLoufz6ege4qD+L6DePCO2hZ5v
UqOrlU1HJeSm7K/8OkcDm5f7y2yWfkOu/679K/T/Zz08ZmEwoBYObexY8Zqm
66+5Ev0+uA5Y4pM8x6bo46UvlJH4G2BrteC7x+M0IAiydjv3NkCwufCt76N0
+11FC+8zG+FB19TswDAN4pb5ZckHmgHLvjabHKBBRXVbMNm4Fc5c59gp0EHP
p0d7hblCGzgGke/da6WfJ5IdTA+2tkOCtJpnXTMNTnh1+jZ96IAdQnPsSnU0
qJbrcb6zpwdaYy45ttH3r0Nzz9vEiR4oUdPODaXv7wB0e8HKqheGD7GmyxXT
QGbiNjlEow+Y41Cd6Ce6P23n3I6xfiikhrEwZ9Lg4NPZKprJANy09qljSaf7
pzmPbS0dgABetojZJBpkP3ORUXw+CLp8rVyBcTQYm3FN9T45BMRrTZKv6eeZ
Q4p7rNDrUfjembLWe5EGmguLH4h8Y+AhPxUVYEoDNn2PhmMPxsBOOqGEx4i+
HxY9djnS61Z5rRjTog4NpgzuBpWwTUKSSHh0gQoNCnxLSt4emIYHLANvTqxP
QUr2xu9Ch2mI0r9qlrwwBYFNlK7StGmgeXbY9NCm4Lw8dbWFYwYk5+VbxPqn
YLmZepBheAYyUF7Ju7Ip0FD69t4w/h9cmPpezho0BapNf+JKfv2D6z8UPmbc
p9cbr4m7imv/gLjtlJ/S3SmQ/sWrvf3KHDBa50ztvDEF3LaOjVT5eXAISgxf
PzkFEwmCc8olC+DvyKqPWacgmc1Nlf3vMrh9kVtW8J6EZx9C+L14V4DrqHt/
sfMkxF1IXR/RWwFWVb7H6NokhGZVl/14swLFwYrX+EwmweOohIm3xyqIjvrs
3aMyCUbedW7jO9ehbGC3wYnuCWB029tpw8+A7ppabSiTJuCCZU5DwX4GhJOU
drFKT8D7E/CLzZAB8fhf72zmnwArkWuf8gMY0L3uCXa0hV7Pf36NYJpjQLcK
2n2u1I6Dv6DNsYyaLaiiR9pi6uo4MH17/2bAfyvKsLhytT9yDLaxGd63mmJB
nTHPaIt4BPx7/2g7p7MjNxnh4g9/BiHveYCh7ywnqtEIcOzn6INbaTa7B032
IjfT1lLQb4dL158JPbrPhzI4Q1qlaxphtW1HzcxjPiS90Hgr41MjPNHz9L34
jA9dPDkkREpuhHrZ8z3ED3zoBbra73O7EY4O703tHORDbLFqDK3cjSBnEylJ
Os6PBqU9sxItGmDOIlChi0MAVV5beJS8XgcRvxc7dAUFUNmr/kfKI3WgdNg+
9L2MAOJ07XStaagDu306k4+QAGobWpDWyqqDtvatb0nOAkjy598Ls8Z1UGL6
HymwWQAVGSmwc1jUQtAZN3VygiBi79+3bW9fNURVyzu8zhZEkXivIOlzNSTo
9iRJfRZEYin6ee70+3Le4eNMfA2CKGqh8JK3RjW0ygnUrm3bh8hhxUU34qpA
lrHEptxlH9o4PtLUe64Syt8zR5idFEI9Wf2S2/5VQJ1S0feG80Jo+4HLN5Vr
KqA9y3H+pJ0Q6puuS/LJroCppJYLlPtCqPJJWWy0ZQXwhGRLSXwWQlKBSh8T
6srB1vrUlwlxYdRte3mIv6AMmPbEDv23Iozyhn30bTJKgWvKl4NrmwhqPH20
ODqgFMR+Xj2QwS2CiLnSroNXS4HirRnwU1EE2XYPe40qlYLn4IAU52URxKpx
2vJe4XeYyifZppWKIDLrabumP99gQn7EyUpHFPm/GNJ/IYdhjrfr4St9UWS0
XdijZxeGVaaGp3NGoiho0LHUaYIKrD1fvgVcFkVVyydPRQVQQSY6nPOVhygi
mnd1FxWXgNXqgXf/ckRR4Y7rvwLViqGl6uH0g11iqL7onxjT+SKIoSQeO8cj
hr4l9l3Wly0Co3f5z6SExJDZezfV1qVCqIkbOFouL4Z2XTauLXxWCOVXtJ5u
0xFDH6c//ErqK4BPi2tawd5i6ACjaSbV6zPESbhGh4+KoYSyPU8be/LhbFzI
yOVpMaR/Tp9RoiAfuHakHyYsiqE/kaaLbyLyIWyqfriOSRyF3/j53OtIPgQU
qmhyiYoj5tc7rvdlfQC30+ODMSbiSJ23s+zVvfdwzsvqwLNSccQT9sImiV4X
4xL3sCz+EkevDX3qyZp58Ida3mxcJ45Gtj5OWhTKAxMmhTvsXeLIKDqZwP3j
LZx//O/DvQW6v4muR+mtb+BC8gOivZwEarl3KTeSKxcsS18q7g+XQK9DT7gy
VWRDyt/zaxGxEmjb2QJN9ths6Nu2s3ryuQSqi6XV2llng5X+rRuZWRLI8OxU
F+uWbLBuVssR+C6Bwrr8z7ChLLAb/imzZV4C8f37VJdW/RIcdo6L11yQRGVD
jF/ihTJg3LOIaecVSfTlV+pY3Xw6XB8JGtK1l0Q88hKf9WvSwb5MNuebiyR6
XTD5h/VeOlj9Z0f8GCqJVt1fsz0ZSgOzf32QUCKJHJ5PlOVSU0Gno/XidXEp
5NK8vZIPkqFML4uSKSuFnrNRDs9tJMHRAnfRQWUp1MLM9ApRk0ArlmfQ4pAU
YrIOYpXXSgLN02dvnDkrhXL3pjAon0gEUmmt58EAKfT5Tfb9O7efg8ir8jiW
MSlk8fyFwsyOJ3A2uaCwcloK3ZOhRbg3xENwdE5n2KIUsn0cyXfzeTzMeYWJ
8zJLI6ZF5vI05Xio1Dd5IyMqjVCV5RGpC3HgNvW37LiJNOK2dTGY+hEDr/tb
RtgspJHoDj/qnpgY6Pvza2e9tTQ6GLn/XrJ1DOhTc8+YOUmj0T9Xz/ZsjQHx
iDtd10KlUUndpPzC8Wj4TWSeD/4ujVoCq1ZnBiOBUXqR9/QvaUSI+hm9uygS
DgqManDXSaMOp/MWQeGRkMb4+97zLmmk3vKM59GhSPBojGF7vSSNjpODtNPi
I0DyjqTkb2UZ9Cezov0FNQy8CrSNdz2XQV85R2U1zwcD6WLd9OVUGXRMveuj
sGAwjG1eDMvLlEHD97jHfbuD4IKu268z+TJIW5Y2kW8XBBp/siDmtwyyu0zu
7fEOhKV/7Ir8DLLo0+SpR57UAMiLf/brGossejp161JjUABcPSRjX8Qmi4xk
rRsSzwZAqx9KM+eXRdol553vjz+Ez5wufEkkWWRNsl68KfwQ3FRamSRsZdEC
YSOe9MQflBtt0lxuyKKAXeQqjWv+MOQ2Az+cZNHuvQJPMjX84VwJq5etryyq
TAwWe93tB/tPHZ7JjJdFl9du7Dul4Af/rqd1KVbKoqa6XHXjP/fg9kuHTwdU
5FDeJUursC5v6K4VjOU4IIeWgqSUiBHecGq50mVIUw4F3chJC9P2Bnl9OWLc
CTkkM2br5fLaCwZn/r6at5VD4buuThYF3AXTw5dT8xPk0HBjkNqyuQeU23Hc
C02XQ9Jhl5Nj+T1gf0TxJZscOUSQGXjQ3OIOuwcE9+0pkEOqfEtnNEzcoTKw
Nc6lUQ5p5L8+4HzBDShNZ0JJrPJoOHmlwfU/V3i9znCDlVMeJdt7zGTruIKg
TJ5eP688EjZXLr7J4QpLnhzboqTkEVv+VveEZBd4L1J1fwbRuWZLjutPZ5C6
cdQ9z10e6Wr3VW0nOwEbo5qV8l95VNrn5Tdc4QCF7luNh8blUcbuGmt2dwew
m6zVTpqVR6MffocwyjgAbr0qxcGggOrEOcyMg26Ay9tnI5MCCujZTfGTF02v
Q/vFDcdcQwX0hH1P7X3eq/CoofKyrakCahH3ZqposIf9x+MNhS4pIObIQ2+p
YfYQRiaQHt9QQEWJzQM/ttuDFqvVvEOAAmqMr52bYbKDrM9lXopfFZCOt/rJ
u/ts4JxSlMPgdwU06LnjgEa/NTCmX7JI+KWA4pg7VmKyrOFi2CKFrUUB9Rzj
PbdXzRp22coxTswoIHH/VSq/uRW4cT0OfCWjiHK82i5tFFvCsZtnY+WjFZGn
6sop82pzcI36wnDrqSJqXTogs+BrDhmfxR0+JCsiL52MSlOSOTAyzhzRfK2I
TsnvOnL1+QXAcY+nT5UpouMZBZ6hbmaggctPOi0qIq13NeVXTpvCtb9Knz+u
KyIpNxmlp+ym8IQ1VnxlqxKy2OV5yLvaBBbPWi/77VZCT3Z1rFP0TSB/dPNl
jJwSYmB8HR5ifA6UudUZC8yVEGOj/ObUf8ZgcTDl5toVJaROK+qUO24MoRbb
2tBVJfQA9T1a2m0M45nNb3+5KiGH22xfTmYYQZams0XHYyXExvLRJr3+DEjY
vSrYoCqhYWWGJNoxQzAK4ZLULlei33jSu8t5DMEvzzP8UbUSmhVjY9eoOw29
K7p2u9uUUDS7m40f32lICh/kFp9VQkOmCUrh+aeAr1Do1jFJZVT+arM4mu8k
bFhnCnIqKKOUlzBo/v0EDHIQf3YSlZFVQ6ChxM0TkGdzVMwVlFHTz5cHXpTp
ge7uG41pF5QRm20fUvA7Dm72BWoMkcrotnQPP7OMDlzkOjJYFa+MfCqvZIT0
HIMjxVUR8UnKyDK8W3X0yTHg4O4ZVX6tjA5kC6mIchyDlyXMCRYVykhm22MG
CuNRaN5rzPBlXRn5cdddOr3rCBThztcBTCqI3bLFU7NJC1Ju2JkZ7VRBXLs+
7+t+qgUO3zzfj/KpoJK/bznVZLSA6WaKDd9+FaQqetdlxwkE+39M/rxzXQXZ
b7vlIWhxGARuud/RclJBsm8iTuBVTWAQ2CLO7qGCLpwt1Ip+rgnVt/Z4ZTxU
QZH8i5Kfug+BteAhpcYUFXRjXPVktLMGRDkHRhJaVFB85pfN/t9qsFL9uiCw
iz6f5h0xFX81sJKp7+kdUEFHdLN5TNXVgNzJrxw5rYLMI6ZkiVkHYCzt3N8l
JgKyXOMZ+x2uCqFsw/fNhAnIV6Zz7csDMmB1z9iHYgREHRdVL9Qhw5zdzux3
kgTkfH3B99YOMlz8plK3Q4GAKoweKG1GkEDJzUO4SI2AQmo4zrtmEaGmZ8cX
gTMEtHbZ/YXIlAowsifU6JwloOQXYbTbj1TggIZyv7Mp3X5KomNJTAWSYox2
VFkQUKgf21rSBWW4pffc1Os6Adlni3EMtynC7g+Kcx3+BJR0s/BcPLs8HO0t
2bb9EQGpHMkSqi6QAw/2M4L7gwnowwvPISZbOei1v3MkNIKAjvbiUTcsC+/2
lURoJhLQfWk/a3Z/GTAKOK2U+ImABIc/OaTul4KXZtN6hYUENMOw3CQzLQnL
ipF2zV8J6CQDV4fva0lIaWxIZi8loH4xO/9YGUmYFDXh8q0lIH7lb3+lZCQg
8MvFxUsjBDR/8MqOcT0x6Axb5/YaJyCn2FZ1Z04xULFKIsRP0fXZ/TYvs00U
/mzvvVY7R0AsDQIJex1EQcLEuhO2ENEN0ZDr4UQRKJm+9k1UgIiYH0241ors
A64frN2aQkTUxMDl//e7INjGv1o5L0pEH4k3F4TsBYGNMkmOlCaiX9edakbe
C4BZyO2XW8h0jja9F2LKD3NS7iH9J4kI8nR3nWzggePLvFkbBkTU0n+Kly2A
B55XF/wQMCKivAROhxINHjjisrJudJ6IVuf1GsZf7oVw7HO71IaIGive8wkF
7wF58wfnMnyICAmqLz325AIzp09cTPeJSL7ks0GvKhcEPhqptX5ApK/vQbXQ
P074+0H/hEQIEXHkcR83uM0JKWx7Ie0JEbmPyniT7+yGvSUvZFM+ENHk77vO
GqfY4WhTy9/NT0TUvuVu0rNeNnAe25F+uYiIsOhtdc87bFDH4ygk8o2IDmX/
XE9M3wnBtw5wJdUQ0Vvxhy0bu1mBQaxi9fkoEZ0dxmd4FLeBitpyweoEEbF+
H/FXaGaBS6cU3Myniehcz7lCt/9Y4Itn+LTAIhHNKOhOJ7Uwg1uD6d+nTCR0
bVM8tSKWCcb9R2riRUgoOT09Vl6HEQSeCYQuipNQUMmqUgMDIxzP09czlSYh
9jeBp1y/boGXnXmlPEoklPkyo/7ZgS1gqepZEKtBQtxuaSw8Bxjgz9COtOhz
JPTArNlCuGSNUn42KKHwPAk9voI4hE3XKJ++b4/vMSehWpeEEJ+ZVUpc0rZQ
BSt6P0/YwRPyq5RzJsxupY4kJAUxRqmvlilNZQwn/j0iIWOZq0ZZowuUH+R7
R/lDSCjvhcfN13ELlPzUTQqEkZAd56fjtUcXKDE+G+SQGBKa+D6VYpUxTzFW
XROSSCWh0/4jNPPbc5SGjMUZoyISUhO5xpB4cJbynct9wqOYhJyz/tIm5mco
7+8tDCVhen9j/7JU/gwl6uJ8x1g5CQkkZhnrkmcoZ/b8K/NrJKFDv8b65w5N
U+r8p56+nyAh1+yPG+yjExQ8czOmlUZCXEzq5pK+E5S8y5NhG7N0/RgU3uXv
maBEHJrwP7FMQvzRXA9VdMYpp/+N3uxnJiPnnXP1LEWjlBqrv1pcImT0vqJa
RLVviNLHlLkUK05GgWtqXJ33hyhzL6++5ZcmI1ZzaZ1NiSEK//j4PjElMnL9
6rOR7vCXYuMyu6hyiIxuprd3/eYYpLjvzX/zgUJGIw/iPIqLBijBn+/Yqh0h
o2T27msb9gOUt6tLDRQ9Mvpt/1PLsryfsuK/mXvKlIx02tlPCUb1Udilv9nU
XyAjT9+tKWzH+yiiP/0Ez12ij3+psii72Us5xsYSdNGWjHzTlarrbvdSImLY
bG64kFGKWVZ8+fduivQLfoGgcDJSIU3ITA+3U9R1O+rYoslo87LRnNaddor+
aMKjiDgyYjIycr/K1E5xUhKdj08ko6a3fURe2TbK14/SdS9fkdFuqVhBjQct
lFrTkQD5t2R0/RbR75ZIC6V/Ofvwm/dkBCWyZtpf/1C2UZRefSwko6OGHDty
V5opRuXkgB8VZBQlNmjRGdREsb06r3m8ioyWEnaFnCc2UTxYP/+rqiGj/vcj
XUfaGymJBhpXGpvJyPh8ufNJQiNl5A/S7B8go/D6U+bRE/WUFQ/Gf7bDZFQq
ISM6nFRPYRf8kT06Rs/fpUv7fI3qKaTLurwzM3R9zC98uVJcRzm2ZUeN6zyd
n196nOFaRzmfXvlgaYke79eiOR6lOsr1Y6GHvNfo9pFNN6/+rqX833tn9P/v
nf8HyRSEPQ==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 3.72665697478785*^-6},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-20, 20}, {3.72665697478785*^-6, 0.9999997038209226}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.682692093318124*^9, 3.682692189722209*^9}, {
   3.682694825522223*^9, 3.682694830597612*^9}, {3.682713008735911*^9, 
   3.682713040615034*^9}, 3.6827131318976107`*^9, 3.682716526071909*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TraditionalForm", "[", 
  RowBox[{"f", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.682692978506893*^9, 3.682693030703268*^9}}],

Cell[BoxData[
 FormBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], "32"]}]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.6826929824040613`*^9, 3.682693030980813*^9}, {
   3.6827130087814503`*^9, 3.6827130406561317`*^9}, 3.682713131938897*^9, 
   3.682716526122046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probs", "=", 
  RowBox[{"N", "@", 
   RowBox[{"f", "[", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "15"}], ",", "15"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.682693657654747*^9, 3.682693696004442*^9}, {
  3.6827129947742357`*^9, 3.682712996825921*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.00088382630693505`", ",", "0.002187491118182885`", ",", 
   "0.005086069231012701`", ",", "0.011108996538242306`", ",", 
   "0.022794180883612344`", ",", "0.04393693362340742`", ",", 
   "0.07955950871822769`", ",", "0.1353352832366127`", ",", 
   "0.2162651668298873`", ",", "0.32465246735834974`", ",", 
   "0.45783336177161427`", ",", "0.6065306597126334`", ",", 
   "0.7548396019890073`", ",", "0.8824969025845955`", ",", 
   "0.9692332344763441`", ",", "1.`", ",", "0.9692332344763441`", ",", 
   "0.8824969025845955`", ",", "0.7548396019890073`", ",", 
   "0.6065306597126334`", ",", "0.45783336177161427`", ",", 
   "0.32465246735834974`", ",", "0.2162651668298873`", ",", 
   "0.1353352832366127`", ",", "0.07955950871822769`", ",", 
   "0.04393693362340742`", ",", "0.022794180883612344`", ",", 
   "0.011108996538242306`", ",", "0.005086069231012701`", ",", 
   "0.002187491118182885`", ",", "0.00088382630693505`"}], "}"}]], "Output",
 CellChangeTimes->{{3.682693666017703*^9, 3.6826936972375183`*^9}, {
   3.682712997395939*^9, 3.682713040706789*^9}, 3.682713131989593*^9, 
   3.682713275277441*^9, 3.682716526160074*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probsNorm", "=", 
  RowBox[{"{", 
   RowBox[{"probs", "*", 
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{"Total", "[", "probs", "]"}]], ")"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.682693698549613*^9, 3.6826937300886497`*^9}, {
  3.682693801118904*^9, 3.682693802946376*^9}, {3.682713255244356*^9, 
  3.682713268402133*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "0.00008815793930271554`", ",", "0.00021819299528517855`", ",", 
    "0.0005073139134225577`", ",", "0.0011080754610355945`", ",", 
    "0.0022736232210163075`", ",", "0.004382523463181367`", ",", 
    "0.007935724797395977`", ",", "0.013499122612069848`", ",", 
    "0.021571536512413322`", ",", "0.032382711724326954`", ",", 
    "0.04566694315513992`", ",", "0.06049887026966686`", ",", 
    "0.07529206054773281`", ",", "0.08802533683646563`", ",", 
    "0.09667691941808129`", ",", "0.09974577426692735`", ",", 
    "0.09667691941808129`", ",", "0.08802533683646563`", ",", 
    "0.07529206054773281`", ",", "0.06049887026966686`", ",", 
    "0.04566694315513992`", ",", "0.032382711724326954`", ",", 
    "0.021571536512413322`", ",", "0.013499122612069848`", ",", 
    "0.007935724797395977`", ",", "0.004382523463181367`", ",", 
    "0.0022736232210163075`", ",", "0.0011080754610355945`", ",", 
    "0.0005073139134225577`", ",", "0.00021819299528517855`", ",", 
    "0.00008815793930271554`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.68269372353547*^9, 3.682693731096521*^9}, 
   3.682693803212885*^9, {3.682712998641839*^9, 3.682713040753921*^9}, 
   3.682713132032256*^9, {3.682713269072451*^9, 3.682713276279991*^9}, 
   3.682716526199572*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probNormGraph", "=", 
  RowBox[{"Transpose", "@", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "15"}], ",", "15"}], "]"}], "}"}], ",", "probsNorm"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6826937753741283`*^9, 3.6826938736616297`*^9}, {
  3.682713018765665*^9, 3.682713020151779*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "15"}], ",", "0.00008815793930271554`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14"}], ",", "0.00021819299528517855`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "13"}], ",", "0.0005073139134225577`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "12"}], ",", "0.0011080754610355945`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "11"}], ",", "0.0022736232210163075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "0.004382523463181367`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9"}], ",", "0.007935724797395977`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8"}], ",", "0.013499122612069848`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7"}], ",", "0.021571536512413322`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", "0.032382711724326954`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "0.04566694315513992`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", "0.06049887026966686`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0.07529206054773281`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "0.08802533683646563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0.09667691941808129`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.09974577426692735`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0.09667691941808129`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0.08802533683646563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0.07529206054773281`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0.06049887026966686`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.04566694315513992`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0.032382711724326954`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "0.021571536512413322`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0.013499122612069848`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0.007935724797395977`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0.004382523463181367`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "0.0022736232210163075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "0.0011080754610355945`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "0.0005073139134225577`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "0.00021819299528517855`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "0.00008815793930271554`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.682693815262137*^9, 3.682693874414551*^9}, {
   3.68271299982253*^9, 3.682713040794088*^9}, 3.682713132068787*^9, 
   3.682713277352112*^9, 3.6827165262405453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"probNormGraph", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682693735185822*^9, 3.68269374572086*^9}, {
  3.682693855054821*^9, 3.682693855996744*^9}, {3.68271278301614*^9, 
  3.68271280074179*^9}, {3.682712844805273*^9, 3.6827128451102247`*^9}, {
  3.68271652137799*^9, 3.682716546022935*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQF6BypjE+7qyojbQ/g6B64vvdIXPlMHytc6MP1s
XOiK+Q5QvsYBXc3y77PUg6B8tQPPuMV0lBYkQfkqB/j9dNZnfC6E8pUOrOo8
83mWQwOUr3DA5KvqxNyl3VC+zIGcSYn+N8WmQfkSBxYtnF9fPmUBlC9yYKf8
jrAVicuhfIEDX+c1Wm39uQ7K5ziQWrRZM9xtM5TPcODC9HdiVzq2Qfkf9qft
0+2/uH8HTJ5hF2NK2oeOnTB5ezR5B1T9HA6o5gs4oNov4oDqPgkHVPfLOKD6
T8EB1f9KDqjho+KAGn5qDqjhq+GAGv5aDqjxo+OAGn96DrD4BQBpw4uK
      
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-15., 15.}, {0, 0.09974577426692735}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.682693746470031*^9, {3.682693856237876*^9, 3.682693876098145*^9}, {
   3.682712786006208*^9, 3.6827127888846903`*^9}, {3.682712847379643*^9, 
   3.682712855479382*^9}, {3.682713005269333*^9, 3.68271304085365*^9}, 
   3.6827131321494503`*^9, 3.6827132787898293`*^9, {3.682716523149362*^9, 
   3.682716546578343*^9}}]
}, Open  ]]
},
WindowSize->{1916, 1041},
WindowMargins->{{2, Automatic}, {2, 37}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 427, 13, 58, "Input"],
Cell[CellGroupData[{
Cell[1010, 37, 664, 16, 89, "Input"],
Cell[1677, 55, 16816, 288, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18530, 348, 162, 3, 32, "Input"],
Cell[18695, 353, 334, 8, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19066, 366, 306, 8, 32, "Input"],
Cell[19375, 376, 1178, 20, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20590, 401, 363, 9, 62, "Input"],
Cell[20956, 412, 1324, 23, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22317, 440, 397, 11, 32, "Input"],
Cell[22717, 453, 3021, 83, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25775, 541, 395, 7, 35, "Input"],
Cell[26173, 550, 2070, 47, 414, "Output"]
}, Open  ]]
}
]
*)

